# Pentagonal numbers are generated by the formula, P_n=n(3n-1)/2. The first ten pentagonal numbers are:
#
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145,...
#
# It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. However, their difference, 70 - 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, P_j and P_k, for which their sum and difference are pentagonal and D = |P_k - P_j| is minimised; what is the value of D?

import math


def generate_pentagonal_numbers(n):
    pentagonal_numbers = []
    for n in range(1, n + 1):
        pentagonal_numbers.append((n * (3 * n - 1)) // 2)
    return pentagonal_numbers


if __name__ == "__main__":
    pentagonal_numbers = generate_pentagonal_numbers(10000)
    pentagonal_set = set(pentagonal_numbers)

    res = math.inf
    for idx, num1 in enumerate(pentagonal_numbers):
        for num2 in pentagonal_numbers[idx + 1 :]:
            if num1 + num2 in pentagonal_set and num2 - num1 in pentagonal_set:
                res = min(res, num2 - num1)

    print(res)
