# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55,...
#
# Let us list the factors of the first seven triangle numbers:
#
# 1 : 1
# 3 : 1,3
# 6 : 1,2,3,6
# 10 : 1,2,5,10
# 15 : 1,3,5,15
# 21 : 1,3,7,21
# 28 : 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?

import math


def divisors(n):
    divisors = []
    i = 1
    while i < math.sqrt(n):
        if n % i == 0:
            divisors.append(i)
            divisors.append(n // i)
        i = i + 1
    if int(math.sqrt(n)) == math.sqrt(n):
        divisors.append(int(math.sqrt(n)))
    return divisors


if __name__ == "__main__":
    n = 1
    while True:
        triangle_number = (n * (n + 1)) // 2
        if len(divisors(triangle_number)) >= 500:
            print(triangle_number)
            break
        n += 1
